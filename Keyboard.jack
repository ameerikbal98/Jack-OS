// This file is part of www.nand2tetris.org
// and the book "The Elements of Computing Systems"
// by Nisan and Schocken, MIT Press.
// File name: projects/12/Keyboard.jack

/**
 * A library for handling user input from the keyboard.
 */
class Keyboard {
    static int keyboard_memory;

    /** Initializes the keyboard. */
    function void init() 
    {
        let keyboard_memory = 24576;
        return;
    } 

    /**
     * Returns the character of the currently pressed key on the keyboard;
     * if no key is currently pressed, returns 0.
     *
     * Recognizes all ASCII characters, as well as the following keys:
     * new line = 128 = String.newline()
     * backspace = 129 = String.backspace()
     * left arrow = 130
     * up arrow = 131
     * right arrow = 132
     * down arrow = 133
     * home = 134
     * End = 135
     * page up = 136
     * page down = 137
     * insert = 138
     * delete = 139
     * ESC = 140
     * F1 - F12 = 141 - 152
     */
    function char keyPressed() 
    {
        return Memory.peek(keyboard_memory);
    }

    /**								
     * Waits until a key is pressed on the keyboard and released,
     * then echoes the key to the screen, and returns the character 
     * of the pressed key.
     */
    function char readChar()
    {
        var char c;
        while(Keyboard.keyPressed() = 0)
        {
        }
        let c = Keyboard.keyPressed();
        while(~(Keyboard.keyPressed() = 0))
        {
        }
        if (~((c < 32) | (c > 126))) {
            do Output.printChar(c);
        }
        return c;
    }

    /**								
     * Displays the message on the screen, reads from the keyboard the entered
     * text until a newline character is detected, echoes the text to the screen,
     * and returns its value. Also handles user backspaces.
     */
    function String readLine(String message) 
    {
        var String str;
        var char c;

        let str = String.new(100);

        do Output.printString(message);

        while(true)
        {
            let c = Keyboard.readChar();
            if(c = String.backSpace())
            {
                do str.eraseLastChar();
                do Output.backSpace();
            }
            else
            {
                if(c = 128)
                {
                    do Output.println();
                    return str;
                }
                do str.appendChar(c);
            }
        }
        return str;
    }   

    /**								
     * Displays the message on the screen, reads from the keyboard the entered
     * text until a newline character is detected, echoes the text to the screen,
     * and returns its integer value (until the first non-digit character in the
     * entered text is detected). Also handles user backspaces. 
     */
    function int readInt(String message) 
    {
        var boolean negative,loop_val;
        var char c;
        var String vals;
        let vals = String.new(6);
        do Output.printString(message);

        while(~loop_val)
        {
            let c = Keyboard.readChar();
            if(c = 45)
            {
               do vals.appendChar(45);
            }
            else 
            {
                if(~((c<48)|(c>59)))
                {
                    do vals.appendChar(c);
                }
                else
                {
                    let loop_val = true;
                }
            }
        }

        return vals.intValue();
    }
}
